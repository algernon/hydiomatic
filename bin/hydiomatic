#! /usr/bin/env hy
(import [hy.importer [import-file-to-hst]]
        [argparse]
        [sys]
        [hy]
        [hy.cmdline [HyREPL]]
        [hy.completer [completion]]
        [hydiomatic.core [simplify]]
        [hydiomatic.utils [hypprint]])

(defn launch-repl []
  (setv sys.ps1 ";=> ")
  (setv sys.ps2 "    ")

  (with [[(completion)]]
        (setv hr (HyREPL))
        (.runsource hr "(import [hydiomatic.core [*]] [hydiomatic.rules[*]])")
        (.interact hr "hydiomatic")))

(defn process-file [fn]
  (apply hypprint [(simplify (import-file-to-hst fn))]
         {"outermost" true}))

(def parser (apply argparse.ArgumentParser []
                   {"prog" "hydiomatic"
                    "usage" "%(prog)s [options] FILE"
                    "formatter_class" argparse.RawDescriptionHelpFormatter}))

(apply parser.add_argument ["--repl" "-r"]
       {"action" "store_true"
        "help" "Launch a REPL instead of simplifying a file"})
(apply parser.add_argument ["args"]
       {"nargs" argparse.REMAINDER
        "help" argparse.SUPPRESS})

(def options (.parse_args parser (rest sys.argv)))

(if options.repl
  (launch-repl)
  (do
   (unless (= (len options.args) 1)
     (.print_help parser)
     (sys.exit 1))
   (process-file (first options.args))))
