#! /usr/bin/env hy
(import [hy.importer [import-file-to-hst]]
        [argparse]
        [sys]
        [hy]
        [hy.cmdline [HyREPL]]
        [hy.completer [completion]]
        [hydiomatic.core [simplify]]
        [hydiomatic.utils [hypprint hypformat]]
        [difflib [unified-diff]])

(defn launch-repl []
  (setv sys.ps1 ";=> ")
  (setv sys.ps2 "    ")

  (with [[(completion)]]
        (setv hr (HyREPL))
        (.runsource hr "(import [hydiomatic.core [*]] [hydiomatic.rules[*]])")
        (.interact hr "hydiomatic")))

(defn process-file [transform printer fn]
  (apply printer [(transform (import-file-to-hst fn))]
         {"outermost" true}))

(def parser (apply argparse.ArgumentParser []
                   {"prog" "hydiomatic"
                    "usage" "%(prog)s [options] FILE"
                    "formatter_class" argparse.RawDescriptionHelpFormatter}))

(apply parser.add_argument ["--repl" "-r"]
       {"action" "store_true"
        "help" "Launch a REPL instead of simplifying a file"})
(apply parser.add_argument ["--dry-run" "-n"]
       {"action" "store_true"
        "help" "Output the parsed file without simplification"})
(apply parser.add_argument ["--diff" "-d"]
       {"action" "store_true"
        "help" "Print a unified diff of the original and the simplified file."})
(apply parser.add_argument ["args"]
       {"nargs" argparse.REMAINDER
        "help" argparse.SUPPRESS})

(def options (.parse_args parser (rest sys.argv)))

(if options.repl
  (launch-repl)
  (do
   (unless (= (len options.args) 1)
     (.print_help parser)
     (sys.exit 1))
   (if options.dry-run
     (process-file identity hypprint (first options.args))
     (if options.diff
       (let [[original (process-file identity hypformat (first options.args))]
             [simplified (process-file simplify hypformat (first
                                                           options.args))]]
         (for [line (apply unified-diff [original simplified]
                           {"fromfile" (+ (first options.args)
                                          ".orig")
                            "tofile" (first options.args)})]
           (sys.stdout.write line)))
       (process-file simplify hypprint (first options.args))))))
